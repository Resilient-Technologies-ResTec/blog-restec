{
  "hash": "5633331635ff5fd9dcdc9c66b3fe5eea",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Título\"\nauthor: \"Resilient Technologies S.A.S\"\ndate: \"2025-06-23\"\ncategories: [Cerdos, Precios]\nimage: \"img.png\"\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Bibliotecas\n# library(httr)\n# library(jsonlite)\n# library(googleCloudStorageR)\nlibrary(arrow)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAdjuntando el paquete: 'arrow'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:utils':\n\n    timestamp\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ lubridate::duration() masks arrow::duration()\n✖ dplyr::filter()       masks stats::filter()\n✖ dplyr::lag()          masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n```\n:::\n\n\n\n# Notas\n\n- Sebastián propone una publicación donde se hable de tedencias de precios\n- Sebastián propone que el análisis muestre la rentabilidad de este negocio\n- ¿Qué datos tenemos?\n  - Precios mensuales de cerdo en pie PorkColombia\n  - Precios mensuales maíz EEUU (Investing)\n- ¿Qué quiero analizar o mostrar?\n  - Variación del precio y mirar si están relacionadas precio maíz vs precio del cerdo\n  - Sebas espera que a mayor oferta de cerdo menor es el precio\n  \n\n::: {.cell}\n\n```{.r .cell-code}\n# Configuración --------------------------------\n\n## Funciones personalizadas\nsource(\"../../source-r/getSecretGCP.R\", encoding = \"UTF-8\")\nsource(\"../../source-r/authRestec.R\", encoding = \"UTF-8\")\n\n## Cuenta de servicios GCP\ncta_servicio <-\n  getSecretGCP(\n    project_id =  Sys.getenv(\"PROJECT_ID\"),\n    secret_name = Sys.getenv(\"SECRET_NAME\"),\n    secret_version = Sys.getenv(\"SECRET_VERSION\"),\n    entorno = Sys.getenv(\"ENTORNO\")\n  )\n\n# Autenticación GCP\nauthRestec(entorno = Sys.getenv(\"ENTORNO\"),\n           ruta_credenciales = cta_servicio)\n\n# Datos abastecimiento\nabastecimiento1 <-\n  read_parquet(URLencode(Sys.getenv(\"RUTA_ABASTECIMIENTO1\"))) |> \n  filter(producto == \"Cerdo en pie\") |> \n  filter(fecha >= \"2014-01-01\") |> \n  mutate(year_mes = floor_date(fecha, unit = \"month\"))\n\nabastecimiento2 <-\n  read_parquet(URLencode(Sys.getenv(\"RUTA_ABASTECIMIENTO2\"))) |> \n  filter(producto == \"Cerdo en pie\") |>\n  filter(fecha >= \"2024-12-31\")  |> \n  mutate(year_mes = floor_date(fecha, unit = \"month\"))\n\nabastecimiento_final <-\n  bind_rows(abastecimiento1, abastecimiento2) |>\n  group_by(year_mes, depto_procedencia, mpio_procedencia, ciudad_mercado) |>\n  reframe(total_kg = sum(cantidad_kg, na.rm = TRUE))\n\nwrite_parquet(abastecimiento_final,\n              \"data/abastecimiento_cerdopie_2014_2024.parquet\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Datos abastecimiento\ndf_abastecimiento <-\n  read_parquet(\"data/abastecimiento_cerdopie_2014_2024.parquet\") |> \n  rename(fecha = year_mes)\n\ndf_abastecimiento_nacional <-\n  df_abastecimiento |> \n  group_by(fecha) |> \n  reframe(cantidad_nal_kg = sum(total_kg, na.rm = TRUE))\n  \n\n# Datos precios cerdo en pie\ndf_precio_cerdo <-\n  read_excel(\"data/2025.05.20-Precio_cerdo_pie_canales_porcinas_Porkcolombia.xlsx\",\n             sheet = \"Precio nacional pie \",\n             skip = 7) |> \n  select(-c(`2010`, `2011`, `2012`, `2013`, `2025`)) |> \n  pivot_longer(cols = -Mes, names_to = \"year_es\", values_to = \"precio_pie\") |> \n  mutate(Mes = case_when(\n    Mes == \"Ene\" ~ 1,\n    Mes == \"Feb\" ~ 2,\n    Mes == \"Mar\" ~ 3,\n    Mes == \"Abr\" ~ 4,\n    Mes == \"May\" ~ 5,\n    Mes == \"Jun\" ~ 6,\n    Mes == \"Jul\" ~ 7,\n    Mes == \"Ago\" ~ 8,\n    Mes == \"Sep\" ~ 9,\n    Mes == \"Oct\" ~ 10,\n    Mes == \"Nov\" ~ 11,\n    Mes == \"Dic\" ~ 12\n  ),\n  fecha = paste0(year_es, \"-\", Mes, \"-01\"),\n  fecha = ymd(fecha)) |> \n  select(fecha, precio_pie)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `fecha = ymd(fecha)`.\nCaused by warning:\n!  22 failed to parse.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Datos precios de maíz EEUU\ndf_precio_maiz <-\n  read_csv(\"data/Datos históricos Futuros maíz EE.UU-Descarga20250616..csv\") |> \n  mutate(Fecha = dmy(Fecha)) |> \n  select(fecha = Fecha,\n         precio_maiz = Último)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 184 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Fecha, Vol., % var.\nnum (4): Último, Apertura, Máximo, Mínimo\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n- ¿Cuál departamento tiene mayor volumen de abastecimiento?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_abastecimiento |> \n  group_by(depto_procedencia) |> \n  reframe(total_kg = sum(total_kg, na.rm = TRUE)) |> \n  arrange(desc(total_kg)) |> \n  mutate(porc = round((total_kg / sum(total_kg)) * 100, 2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14 × 3\n   depto_procedencia  total_kg  porc\n   <chr>                 <dbl> <dbl>\n 1 VALLE DEL CAUCA   201699222 91.8 \n 2 CAUCA              17296856  7.87\n 3 CALDAS               167054  0.08\n 4 BOYACÁ               154530  0.07\n 5 ANTIOQUIA             95142  0.04\n 6 QUINDÍO               66660  0.03\n 7 RISARALDA             64640  0.03\n 8 CAQUETÁ               45955  0.02\n 9 HUILA                 22321  0.01\n10 NARIÑO                21614  0.01\n11 TOLIMA                15251  0.01\n12 BOGOTÁ, D. C.         10100  0   \n13 ATLÁNTICO              4343  0   \n14 VAUPÉS                 2020  0   \n```\n\n\n:::\n:::\n\n\n- Series temporales\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_series_mensuales <-\n  df_precio_cerdo |> \n  left_join(df_precio_maiz, by = \"fecha\") |> \n  left_join(df_abastecimiento_nacional, by = \"fecha\") |> \n  filter(!is.na(fecha))\n\ndf_series_mensuales |> \n  pivot_longer(cols = -fecha) |> \n  group_by(name) |> \n  mutate(value_scale = scale(value, center = TRUE, scale = TRUE)) |> \n  ggplot(aes(x = fecha, y = value_scale, color = name)) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  geom_line() +\n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n- Rezago precio maíz vs precio en pie:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_series_mensuales |> \n  mutate(grupo_year = if_else(year(fecha) <= 2020, \"PreCOVID\", \"PosCOVID\")) |> \n  arrange(fecha) |> \n  mutate(rezago_pmaiz = lag(precio_maiz, n = 1)) |> \n  ggplot(aes(x = rezago_pmaiz, y = precio_pie, color = grupo_year)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_y_log10() +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n# URLs\n\n- <https://porkcolombia.co/estadisticas-sectoriales/>\n- <https://es.investing.com/commodities/us-corn>\n- <https://www.dane.gov.co/index.php/estadisticas-por-tema/agropecuario/sistema-de-informacion-de-precios-sipsa/componente-abastecimientos-1>\n  ",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}